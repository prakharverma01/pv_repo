'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.collection = undefined;

var _fuse = require('fuse.js');

var _fuse2 = _interopRequireDefault(_fuse);

var _reselect = require('reselect');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function keywordFilter(items, searchText, keys, searchThreshold) {

    if (searchText === undefined || searchText === '') return items;

    var f = new _fuse2.default(items, {
        caseSensitive: false,
        includeScore: false,
        shouldSort: false,
        threshold: searchThreshold,
        keys: keys || searchKeys
    });

    return f.search(searchText);
}

function filter(appliedFilters, collection, functions) {

    return collection.filter(function (item) {

        if (!Object.keys(appliedFilters).length) return true;

        return Object.keys(appliedFilters).every(function (key) {
            return appliedFilters[key].some(function (value) {
                var fn = functions[key + '__' + value];
                return typeof fn === 'function' ? fn(item) : false;
            });
        });
    });
}

var multiPartFilter = function multiPartFilter(appliedFilters, keyword, subjectsCollection, functions, sortFn, searchKeys, searchThreshold) {
    var filteredResults = filter(appliedFilters, subjectsCollection, functions);
    var keywordFiltered = keywordFilter(filteredResults, keyword, searchKeys, searchThreshold);
    return sortFn.fn(keywordFiltered);
};

var subjects = function subjects(state) {
    return state.subjects;
};

var appliedFilters = function appliedFilters(state) {
    return state.appliedFilters;
};
var keywordSearch = function keywordSearch(state) {
    return state.keywordSearch;
};

var filterFns = function filterFns(state) {
    return state.filterFns;
};

var searchKeys = function searchKeys(state) {
    return state.searchKeys;
};
var sortFn = function sortFn(state) {
    return state.sortFn;
};
var searchThreshold = function searchThreshold(state) {
    return state.searchThreshold;
};

var collection = exports.collection = (0, _reselect.createSelector)([appliedFilters, keywordSearch, subjects, filterFns, sortFn, searchKeys, searchThreshold], multiPartFilter);