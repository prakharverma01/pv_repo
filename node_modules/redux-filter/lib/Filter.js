'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _creators = require('./actions/creators.js');

var actions = _interopRequireWildcard(_creators);

var _redux = require('redux');

var _reduxThunk = require('redux-thunk');

var _reduxThunk2 = _interopRequireDefault(_reduxThunk);

var _root = require('./reducers/root.js');

var _root2 = _interopRequireDefault(_root);

var _constants = require('./constants');

var _buildSelector = require('./selectors/buildSelector');

var _buildSelector2 = _interopRequireDefault(_buildSelector);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var isDom = function isDom(instance) {
    return typeof instance.type !== 'function';
};

var Filter = function (_Component) {
    _inherits(Filter, _Component);

    function Filter(props) {
        _classCallCheck(this, Filter);

        var _this = _possibleConstructorReturn(this, (Filter.__proto__ || Object.getPrototypeOf(Filter)).call(this, props));

        var _props$subjects = props.subjects,
            subjects = _props$subjects === undefined ? [] : _props$subjects,
            _props$filterableCrit = props.filterableCriteria,
            filterableCriteria = _props$filterableCrit === undefined ? [] : _props$filterableCrit,
            _props$filterableCrit2 = props.filterableCriteriaSortOptions,
            filterableCriteriaSortOptions = _props$filterableCrit2 === undefined ? {} : _props$filterableCrit2,
            _props$searchThreshol = props.searchThreshold,
            searchThreshold = _props$searchThreshol === undefined ? .2 : _props$searchThreshol,
            _props$searchKeys = props.searchKeys,
            searchKeys = _props$searchKeys === undefined ? [] : _props$searchKeys,
            _props$sortItems = props.sortItems,
            sortItems = _props$sortItems === undefined ? [] : _props$sortItems,
            _props$middleware = props.middleware,
            middleware = _props$middleware === undefined ? [] : _props$middleware,
            _props$initialState = props.initialState,
            initialState = _props$initialState === undefined ? {} : _props$initialState;


        var middlewares = [_reduxThunk2.default].concat(_toConsumableArray(middleware));

        var finalStore = _redux.applyMiddleware.apply(undefined, _toConsumableArray(middlewares))(_redux.createStore);

        _this.store = finalStore((0, _redux.combineReducers)({
            filter: _root2.default
        }), {
            filter: _extends({
                subjects: subjects,
                filterableCriteria: filterableCriteria,
                filterableCriteriaSortOptions: filterableCriteriaSortOptions,
                searchThreshold: searchThreshold,
                searchKeys: searchKeys,
                sortItems: sortItems
            }, initialState)
        });

        _this.store.dispatch({
            type: _constants.INIT
        });

        // bind action creators to the store
        _this.actions = Object.keys(actions).reduce(function (prev, actionKey) {
            prev[actionKey] = function () {
                return _this.store.dispatch(actions[actionKey].apply(actions, arguments));
            };
            return prev;
        }, {});

        // build selector based on props
        _this.select = (0, _buildSelector2.default)(function (state) {
            return state.filter;
        });

        // if there is a sort function, apply it
        if (sortItems.length && typeof sortItems[0].fn === 'function') {
            _this.actions.applySort(sortItems[0]);
        }

        // compute first state
        _this.state = _this.select(_this.store.getState());

        return _this;
    }

    _createClass(Filter, [{
        key: 'computeState',
        value: function computeState() {
            var nextState = this.select(this.store.getState());
            this.setState(nextState);
        }
    }, {
        key: 'componentWillMount',
        value: function componentWillMount() {
            var _this2 = this;

            // subscribe to the store
            this.store.subscribe(function () {
                return _this2.computeState();
            });
        }
    }, {
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(nextProps) {
            // check if subjecsts are different
            if (nextProps.subjects !== this.props.subjects) {
                this.actions.updateSubjects(nextProps.subjects);
            }
        }
    }, {
        key: 'render',
        value: function render() {
            var props = this.props,
                state = this.state;

            var allProps = _extends({}, props, state);

            var children = allProps.children,
                collection = allProps.collection,
                optionGroups = allProps.optionGroups,
                keyword = allProps.keyword,
                sortItems = allProps.sortItems,
                appliedFilters = allProps.appliedFilters,
                sortFn = allProps.sortFn,
                currentPage = allProps.currentPage;


            var boundActions = this.actions;

            // can only have one child
            _react.Children.only(children);
            // enforce that child component must be a react element
            if (isDom(children)) {
                throw new Error('child must be a react component, not a dom element');
            }

            return (0, _react.cloneElement)(children, _extends({}, boundActions, {
                collection: collection,
                optionGroups: optionGroups,
                keyword: keyword,
                appliedFilters: appliedFilters,
                sortItems: sortItems,
                sortFn: sortFn,
                currentPage: currentPage
            }));
        }
    }]);

    return Filter;
}(_react.Component);

exports.default = Filter;